# -*- coding: utf-8 -*-
"""SDA Week 2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CwoonQ6DMlBcCudVJ7NhXuTl6J3K-jc-

Create a program that takes in two numbers and then outputs the average of the two numbers(use list unpacking).
"""

x = 5
y = 6

avg = (x + y) / 2

print(avg)

x, y = 5, 6
print(x)
print(y)

"""eclipse_dates = ['June 21, 2001', 'December 4, 2002', 'November 23, 2003',
                 'March 29, 2006', 'August 1, 2008', 'July 22, 2009',
                 'July 11, 2010', 'November 13, 2012', 'March 20, 2015',
                 'March 9, 2016']
                 
                 
# TODO: Modify this line so it prints the last three elements of the list
print(eclipse_dates)


"""

eclipse_dates = ['June 21, 2001', 'December 4, 2002', 'November 23, 2003', 'March 29, 2006', 'August 1, 2008', 'July 22, 2009', 'July 11, 2010', 'November 13, 2012', 'March 20, 2015', 'March 9, 2016']
print(eclipse_dates[-3::1])

"""Write a program to allow a user print the number of days in any month of the calendar year
(b) Calculate the number of days in each quarter(slicing)
(c)Use functions to make our code more reusable

NB: days_in_month = [31,28,31,30,31,30,31,31,30,31,30,31]
use list indexing to determine the number of days in month


"""

days_in_month = [31,28,31,30,31,30,31,31,30,31,30,31]
quarter_one = days_in_month[0:3]
quarter_two = days_in_month[3:6]
quarter_three = days_in_month[6:9]
quarter_four = days_in_month[-3::1]
print(quarter_one)
print(quarter_two)
print(quarter_three)
print(quarter_four)

days_in_month = [31,28,31,30,31,30,31,31,30,31,30,31]
quarter_one = days_in_month[0:3]
quarter_two = days_in_month[3:6]
quarter_three = days_in_month[6:9]
quarter_four = days_in_month[-3::1]
print(quarter_one, quarter_two, quarter_three, quarter_four)

"""**If and Else Statments:**

Create variables called bank_balance = 10 and access_code = “niyo”, or set to whatever you like.
Create a program that asks the user to input price of product and access code, and prints ‘Card declined’ if the bank_balance is less than price of product OR the access_code is not equal to “niyo”
otherwise program prints “Payment Accepted”



"""

bank_balance = 10
access_code = "niyo"

bank_balance = int(input("What is your bank balance?: "))
access_code = input("What is your access code?: ")

if bank_balance == 10 and access_code == "niyo":
  print("Payment Accepted")
else:
  print("Card Declined")

"""**For Loop**

Create a sequence of numbers from 0 to 10, and print each item in the sequence:

"""

for a in range(11):
  print(a)

"""Write a program that will print ‘A’, then ‘B’, then it will alternate C's and D's five times and then finish with the letter E once.


"""

print('A')
print('B')
for i in range(5):
  print('C')
  print('D')
print('E')

"""
Write a loop that breaks and prints “Negative number detected”, when a negative integer is detected in the array below.

numbers = [12,34,34,53,342,62,-1,23,5]

"""

numbers = [12,34,34,53,342,62,-1,23,5]
for i in numbers:
  if i < 0:
    print("Negative Number Detected:", -1)

"""Create a list of names. Print out the length of the list. Create an if statement that prints “Access granted” if your name variable is inside the list

Extension: If name is inside list, check that Age is above 21. If Age is above 21, print access granted.


"""

names = ["Ada", "Obi", "Chichi", "Mary", "Iphie", "Nora", "Maureen", "Theresa", "Uju"]
print("The number of names are:", len(names))
user = input("Let's see if your name is in the list, What is your name?: ")

#if statement to check if name input is in the list of names.
if user in names:
  print("Hi", user, "Your name is on the list:", "Access Granted")
else:
  print("Hi", user,"Your name isn't on the list:", "Access Denied")

"""Extension: If name is inside list, check that Age is above 21. If Age is above 21, print access granted."""

names = ["Ada", "Obi", "Chichi", "Mary", "Iphie", "Nora", "Maureen", "Theresa", "Uju"]
print("The number of names are:", len(names))
user = (input("Let's see if your name is in the list, What is your name?: "))
age = int(input("How old are you?: "))

#if statement to check if name input is in the list of names.
if user in names and age >= 21:
  print("Hi", user, "Your name is on the list:", "Access Granted")
  
else:
  print("Hi", user,"Your name isn't on the list or you are under age:", "Access Denied")

"""Write a program that stores your name as a variable.
Write an ‘if statement’ that prints ‘access denied’ if your name variable does not equal ‘John’.
If the name variable equals ‘John’, then the program should print ‘Welcome John. How are you?’


"""

name = "John"
name2 = "Annie"
myName = name

user = input("Enter your name: ")
if user in myName:
  print(f"Welcome {user}! Access Granted, How are you?")
else:
  print("Sorry", user,"Access denied!")

"""Write a program that uses exactly four for loops to print the sequence of letters below: 
AAAAAAAAAABBBBBBBCDCDCDCDEFFFFFFG


"""

for i in range (1, 5):
    print ("A" * i, end ="")
for i in range (3, 5) :
    print ("B" * i , end = "")
for i in range (1, 5) :
    print ("C", end = "")
    print ("D", end = "")
for i in range (0, 1) :
    print ("E", end = "")
for i in range (1, 4) :
    print ("F" * i , end = "")
for i in range (0, 1):
    print ("G", end = "")

"""Write a program to print the square of all the even numbers between 0 and 15

"""

for i in range(0, 15):
  if i % 2 == 0:
    print(i**2)

"""Functions"""

def print_hello(n):
    print('Hello ' * n)
    print()

print_hello(3)
print_hello(5)
times = 2
print_hello(times)

def multiple_print(string, n, bad_words):
    if string in bad_words:
        return
    print(string * n)
    print()

"""Write a function that takes in a number as an arguments and converts it from miles to km.




"""

def convert(miles):
    km = miles * 1.6 
    return km
number = convert(40)
print(number)

"""Create a simple calculator in python that takes in an expression from the user, outputs the result of the evaluation, throws up and error message when a user inputs an invalid expression.





"""

name = input("Enter your name:")
print(f"Hi {name} welcome to your online simple calculator")

operation = input('''
Please type in the math operation you would like to complete:
+ for addition
- for subtraction
* for multiplication
/ for division
''')

number1 = int(input("Enter a number:\n"))
number2 = int(input("Enter another number:\n"))


if operation == '+':
  print(f"{number1} + {number2} =", number1 + number2)

elif operation == '-':
  print(f"{number1} - {number2} =", number1 - number2)

elif operation == '*':
  print(f"{number1} * {number2} =", number1 * number2)

elif operation == '/':
  print(f"{number1} / {number2} =", number1 / number2)

else:
  print("Your input is invalid, please type a valid input")

name = input("Enter your name:")
print(f"Hi {name} welcome to your online simple calculator")

number1 = int(input("Enter a number:\n"))
number2 = int(input("Enter another number:\n"))
calculate = number1 * number2
print(f"{number1} * {number2} = {calculate}")

"""Write a guess-a-number program. 
Create a variable called ‘correct number’. Let the player guess a number.
 The program should tell them if they are correct. 


"""

name = input("Enter Your name: ")
print("Hi", name, "Welcome To Your Online Guess a Number Game")
numbers = [1, 5, 6, 2, 4, 9, 99, 90, 56, 45, 32, 100, 44, 88, 49]
correct_number = int(input("Guess a number!: "))

if correct_number in numbers:
  print("Hurray you guessed the right number")
else:
  print("Sorry better luck next time!")

"""Write a function that stutters a word as if someone is struggling to read it. The first two letters are repeated twice with an ellipsis ... and space after each, and then the word is pronounced with a question mark ?.

Examples
stutter("incredible") ➞ "in... in... incredible?"

stutter("enthusiastic") ➞ "en... en... enthusiastic?"

stutter("outstanding") ➞ "ou... ou... outstanding?"

"""

def stutter(word):
	return (2*(word[:2]+'... '))+word+'?'
read = stutter("incredible")
read2 = stutter("enthusiastic")
read3 = stutter("outstanding")
read4 = stutter("I'm amazing")
print(f"{read}\n {read2}\n {read3}\n {read4}\n")